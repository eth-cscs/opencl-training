Ideas for additional training material
--------------------------------------

[done] Show how to pass compilation options to clBuildProgram

[done] C++ wrapper api example

[done] Images: perform same stencil computation on regular memory and image
memory and compare the results; if using actual images link with FreeImage
library

[done] Binary kernels: create opencl compiler which outputs a binary kernel
compiled for a scpecific device
[todo]And a sample program which uses clCreateProgramWithBinary
to load the kernel; add a utility function to perform compilation. 

[done] Show how to use pinned memory and memory mapping with clEnqueueMapBuffer

[done] MPI

[done] OpenGL interop : show results of stencil computations through OpenGL
       (w/GLFW); note: remote connections through vglconnect do
       not work; turbovnc client with vglrun doesn't work either with GLFW
       because of xkb-related issues: redo with (FREE)GLUT

Show example of standard OpenCL compiler switches; in particular show how
'-g' can be used to debug kernel code 

Full block matrix multiply with non-square matrices

Show example with vector data types

Concurrent/parallel use of multiple resources: contexts, kernels and command
queues with out of order execution enabled;show e.g. how run parallel kernels
on different devices and/or parallel kernels on same device with different
command queues

[?]Subregions, and offsets: restrict computation to a subset of the data and/or
show how to run parallel kernels on different data regions; kernel launch on
subregions is not supported by most OpenCL implementations.

Events:

* timing with callbacks
* sync between parallel kernels
* events in kernels with async local <--> global copies and (possibly)
  overlap of computation and data exchange  

OpenCL 1.2 ?
